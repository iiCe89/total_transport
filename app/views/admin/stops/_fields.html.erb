<% content_for :js do %>
<script type="text/javascript">
  var map;
  var polygon;
  var bounds;
  function initMap() {
    function initialize() {
      map = new google.maps.Map(document.getElementById('map'), {
        zoom: 4,
        center: new google.maps.LatLng(54.559322,-4.174804),
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        disableDefaultUI: true,
        zoomControl: true
      });
      var input = document.getElementById('search_map');
      var searchBox = new google.maps.places.SearchBox(input);

      map.data.setControls(['Polygon']);
      map.data.setDrawingMode('Polygon');
      map.data.setStyle({
        editable: true,
        draggable: true
      });
      
      map.addListener('bounds_changed', function() {
        searchBox.setBounds(map.getBounds());
      });
      
      searchBox.addListener('places_changed', function() {
        var places = searchBox.getPlaces();
        var selectedPlace = places[0];
        
        map.setZoom(10);
        map.panTo(selectedPlace.geometry.location);
      })
      
      // Prevent form being submitted if user uses keyboard to select a place
      function stopFormSubmit(e) {
        if (e.which == 13) e.preventDefault();
      }
      
      input.addEventListener('focus', function() {
        document.addEventListener('keypress', stopFormSubmit);
      });
      
      input.addEventListener('blur', function() {
        document.removeEventListener('keypress', stopFormSubmit, true);
      })
      
      function savePolygon() {
        map.data.setControls(null);
        map.data.setDrawingMode(null);
        map.data.toGeoJson(function (json) {
          $('#stop_polygon').val(JSON.stringify(json));
        });
        $('#resetMapBtn').prop('disabled', false);
        fetchPolygon();
        if(hasPolygon()) {
          fetchLatLngBoundsOfPolygon();
          $('#stop_latitude').val(bounds.getCenter().lat());
          $('#stop_longitude').val(bounds.getCenter().lng());
        }
      }

      function loadPolygon() {
        var data = JSON.parse($('#stop_polygon').val());
        // map.data.forEach(function (f) {
        //     map.data.remove(f);
        // });
        map.data.addGeoJson(data);
        fetchPolygon();
        if(hasPolygon()) {
          fetchLatLngBoundsOfPolygon();
          fitMapToPolygon();
        }
      }

      function fetchPolygon() {
        // This appears to be the most reliable way of
        // fetching the polygon object from the map object :-/
        map.data.forEach(function(feature) {polygon = feature.getGeometry()})
      }

      function hasPolygon() {
        return typeof polygon !== 'undefined';
      }

      function fetchLatLngBoundsOfPolygon() {
        bounds=new google.maps.LatLngBounds();
        polygon.forEachLatLng(function(ll) {bounds.extend(ll)});
      }

      function fitMapToPolygon() {
        fetchLatLngBoundsOfPolygon();
        map.fitBounds(bounds);
      }


      map.data.addListener('addfeature', savePolygon);
      map.data.addListener('removefeature', savePolygon);
      map.data.addListener('setgeometry', savePolygon);
      loadPolygon();
    }

    google.maps.event.addDomListener(window, 'load', initialize);
  };

  function resetMap() {
    map.data.forEach(function (feature) {
      map.data.remove(feature);
    });
    map.data.setControls(['Polygon']);
    map.data.setDrawingMode('Polygon');
    map.data.setStyle({
      editable: true,
      draggable: true
    });
    $('#stop_latitude').val('');
    $('#stop_longitude').val('');
    $('#resetMapBtn').prop('disabled', true);
  }
</script>

<style media="screen">
#map {
  width: 600px;
  height: 300px;
}
</style>
<% end %>

<%= form.label :name %>
<%= form.text_field :name %>
<%= form.label :polygon, "Define the Stop Area" %>
<%= form.hidden_field :polygon, value: form.object.polygon.to_json %>
<%= form.hidden_field :latitude %>
<%= form.hidden_field :longitude %>
<div id="map_wrapper">
  <input type="text" id="search_map" placeholder="Search the map..." autocomplete="off" formaction="" >
  <div id="map"></div>
</div>
<div id="resetMapBtn" class="button negative" disabled type="button" onclick="resetMap()">Clear Map</div>
